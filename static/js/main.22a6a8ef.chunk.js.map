{"version":3,"sources":["components/Header.js","components/Login.js","components/PostForm.js","components/Comment.js","components/CommentForm.js","components/Post.js","App.js","index.js"],"names":["Header","props","className","loggedIn","onClick","displayPostModal","displayLoginModal","logOut","Login","useState","message","setMessage","onSubmit","e","preventDefault","fetch","method","body","JSON","stringify","target","username","value","password","headers","then","res","json","setDisplayLogin","localStorage","setItem","user","_id","token","setLoggedIn","id","name","type","placeholder","URL","PostForm","map","msg","post","test","title","published","checked","getItem","errors","setPost","addPost","required","defaultValue","htmlFor","defaultChecked","formatTime","timeString","time","Date","toLocaleDateString","toLocaleTimeString","Comment","comment","createdAt","author","commentID","confirm","prompt","toLowerCase","removeComment","deleteComment","CommentForm","authorValue","setAuthorValue","commentBodyValue","setCommentBodyValue","commentArray","comments","data","push","setComments","err","onChange","Post","showPostForm","setShowPostForm","showComments","setShowComments","temp","filter","useEffect","postID","removePost","deletePost","changePublishStatus","App","posts","setPosts","displayLogin","displayPostForm","setDisplayPostForm","response","userID","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22a6a8ef.chunk.js","sourcesContent":["import '../stylesheets/Header.css';\n\nfunction Header(props) {\n\n  return (\n    <header className=\"header\">\n      <h1 className='header-title'>Welcome to the blog</h1>\n      {\n        (props.loggedIn && <button onClick={props.displayPostModal} className='header-btn'>Create Post</button>) ||\n        (<button onClick={props.displayLoginModal} className='header-btn'>Login</button>)\n      }\n      {props.loggedIn && <button className='header-btn' onClick={props.logOut}>Log out</button>}\n    </header>\n  );\n};\n\nexport default Header;\n","import '../stylesheets/Login.css';\nimport { useState } from 'react';\nconst URL = 'https://arctic-eh-68834.herokuapp.com';\n\nfunction Login(props) {\n\n  const [message, setMessage] = useState(null);\n\n  const login = (e) => {\n    e.preventDefault();\n    fetch(`${URL}/login`, {\n      method: 'POST',\n      body: JSON.stringify({ 'username': e.target.username.value, 'password': e.target.password.value }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then((res) => {\n      res.json().then((res) => {\n        // If login didn't work...\n        if (res.message) {\n          setMessage(res.message);\n          // If login did work...\n        } else {\n          // Remove login module\n          props.setDisplayLogin(false);\n          // Save token in local storage for insertion into header\n          localStorage.setItem('userID', res.user._id);\n          localStorage.setItem('token', res.token);\n          // Tell App that logged in\n          props.setLoggedIn(true);\n        };\n      });\n    });\n  };\n\n  return (\n    <div className='login-modal'>\n      <button onClick={props.displayLoginModal} className='close-btn'>×</button>\n      {message && <p>{message}</p>}\n      <form onSubmit={login}>\n        <input id='username' name='username' type='text' placeholder='username' />\n        <input id='password' name='password' type='password' placeholder='password' />\n        <button type='submit'>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import '../stylesheets/PostForm.css';\nimport { useState } from 'react';\nconst URL = 'https://arctic-eh-68834.herokuapp.com';\n\nfunction PostForm(props) {\n\n  const [message, setMessage] = useState(null);\n\n  const createPost = (e) => {\n    e.preventDefault();\n\n    if (props.post) {\n      const test = props.post;\n      test.title = e.target.title.value;\n      test.body = e.target.body.value;\n      test.published = e.target.published.checked;\n\n      fetch(`${URL}/posts/${props.post._id}`, {\n        method: 'PUT',\n        body: JSON.stringify({ \"title\": e.target.title.value, \"body\": e.target.body.value, \"published\": e.target.published.checked }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then((res) => {\n        res.json().then((res) => {\n          if (res.message) {\n            setMessage(res.message.errors);\n          } else {\n            // Do not display post form\n            props.displayPostModal();\n            // Display new post\n            props.setPost({ 'data': test });\n          };\n        })\n\n      });\n    } else {\n      fetch(`${URL}/posts`, {\n        method: 'POST',\n        body: JSON.stringify({ \"title\": e.target.title.value, \"body\": e.target.body.value, \"published\": e.target.published.checked }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then((res) => {\n        res.json().then((res) => {\n          // If post isn't valid\n          if (res.message) {\n            setMessage(res.message.errors);\n            // If create post did work...\n          } else {\n            // Show new post on feed\n            props.addPost(res);\n            // Do not display post form\n            props.displayPostModal();\n          };\n        });\n      });\n    };\n  };\n\n  return (\n    <div className=\"post-form\">\n      <button onClick={props.displayPostModal} className='close-btn'>×</button>\n      {message && message.map((msg) => {\n        return <p key={msg.msg}>{msg.msg}</p>\n      })}\n      <form onSubmit={createPost}>\n        <input type='text' id='title' name='title' required placeholder='title' defaultValue={props.post ? props.post.title : ''} />\n        <textarea id='body' name='body' required placeholder='body' defaultValue={props.post ? props.post.body : ''} />\n        <div className='published'>\n          <label htmlFor='published'>Publish?</label>\n          <input type='checkbox' name='published' defaultChecked={props.post ? props.post.published : false} />\n        </div>\n        <button>Create Post</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PostForm;","import '../stylesheets/Comment.css';\nconst URL = 'https://arctic-eh-68834.herokuapp.com';\n\nconst formatTime = (timeString) => {\n  const time = new Date(timeString);\n  return `${time.toLocaleDateString(\"en-US\")} at ${time.toLocaleTimeString('en-US')}`;\n};\n\nfunction Comment(props) {\n\n  const deleteComment = (commentID) => {\n    const confirm = prompt('CONFIRM - Do you want to delete? Type yes to confirm');\n\n    if (confirm && confirm.toLowerCase() === 'yes') {\n      fetch(`${URL}/posts/${props.comment.post}/comments/${commentID}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(() => {\n        props.removeComment(commentID);\n      });\n    };\n  };\n\n  return (\n    <div className='comment'>\n      <div className='comment-header'>\n        <p className='comment-time'>{formatTime(props.comment.createdAt)}</p>\n        <h6 className='comment-author'>{props.comment.author} writes:</h6>\n      </div>\n      <p className='comment-body'>{props.comment.body}</p>\n      {\n        props.loggedIn &&\n        <button\n          className='comment-btn'\n          onClick={() => { deleteComment(props.comment._id) }}\n        >\n          Delete Comment\n        </button>\n      }\n    </div>\n  );\n};\n\nexport default Comment;","import '../stylesheets/CommentForm.css';\nimport { useState } from 'react';\nconst URL = 'https://arctic-eh-68834.herokuapp.com';\n\nfunction CommentForm(props) {\n\n  const [message, setMessage] = useState(null);\n  const [authorValue, setAuthorValue] = useState('');\n  const [commentBodyValue, setCommentBodyValue] = useState('');\n\n  const changeAuthorInput = (e) => {\n    setAuthorValue(e.target.value)\n  };\n\n  const changeBodyInput = (e) => {\n    setCommentBodyValue(e.target.value)\n  };\n\n  const createComment = (e) => {\n    e.preventDefault();\n\n    fetch(`${URL}/posts/${props.post._id}/comments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify({ 'body': e.target.body.value, 'author': e.target.author.value })\n    }).then((res) => {\n      res.json().then((res) => {\n        if (res.errors) {\n          setMessage(res.errors);\n        } else {\n          const commentArray = props.comments.data;\n          commentArray.push(res);\n          setAuthorValue('');\n          setCommentBodyValue('');\n          setMessage(null);\n          props.setComments({ 'data': commentArray });\n        };\n      });\n    });\n  };\n\n  return (\n    <form className='comment-form' onSubmit={createComment}>\n      <h3 className='comment-form-title'>Write a comment...</h3>\n      {message && message.map((err) => {\n        return <p key={err.msg}>{err.msg}</p>\n      })}\n      <input\n        id='author'\n        name='author'\n        placeholder='Your name'\n        value={authorValue}\n        onChange={changeAuthorInput}\n        required\n      />\n      <textarea\n        id='body'\n        name='body'\n        placeholder='Comment'\n        value={commentBodyValue}\n        onChange={changeBodyInput}\n        required\n      />\n      <button>Submit</button>\n    </form>\n  );\n};\n\nexport default CommentForm;","import '../stylesheets/Post.css';\nimport { useEffect, useState } from 'react';\nimport PostForm from './PostForm';\nimport Comment from './Comment';\nimport CommentForm from './CommentForm';\nconst URL = 'https://arctic-eh-68834.herokuapp.com';\n\nconst formatTime = (timeString) => {\n  const time = new Date(timeString);\n  return `${time.toLocaleDateString(\"en-US\")} at ${time.toLocaleTimeString('en-US')}`;\n};\n\nfunction Post(props) {\n\n  const [post, setPost] = useState({ 'data': props.post });\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [comments, setComments] = useState(null);\n  const [showComments, setShowComments] = useState(false);\n\n  const deletePost = (postID) => {\n    const confirm = prompt('CONFIRM - Do you want to delete? Type yes to confirm');\n\n    if (confirm && confirm.toLowerCase() === 'yes') {\n      fetch(`${URL}/posts/${postID}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(() => {\n        props.removePost(postID);\n      });\n    };\n  };\n\n  const removeComment = (commentID) => {\n    const temp = comments.data.filter(comment => comment._id !== commentID);\n    setComments({ 'data': temp });\n  };\n\n  const changePublishStatus = (post) => {\n    fetch(`${URL}/posts/${post._id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify({ \"title\": post.title, \"body\": post.body, \"published\": !post.published }),\n    }).then((res) => {\n      // Show updated post\n      post.published = !post.published;\n      setPost({ 'data': post });\n    });\n  };\n\n  const changeCommentDisplay = () => {\n    setShowComments(!showComments);\n  };\n\n  useEffect(() => {\n    fetch(`${URL}/posts/${props.post._id}/comments`).then((res) => {\n      res.json().then((res) => {\n        setComments({ 'data': res });\n      });\n    });\n  }, [props.post._id]);\n\n  return (\n    <div className=\"post\">\n      {\n        showPostForm &&\n        <PostForm displayPostModal={() => { setShowPostForm(!showPostForm) }}\n          post={post.data}\n          setPost={setPost}\n        />\n      }\n      <div className='post-header'>\n        <h3 className='post-title'>{post.data.title}</h3>\n        <p className='post-timestamp'>Posted on: {formatTime(post.data.createdAt)}</p>\n        <p className='post-author'>By: {post.data.author}</p>\n      </div>\n      <p className='post-body'>{post.data.body}</p>\n      <div className='post-btns'>\n        {props.loggedIn &&\n          <button onClick={() => setShowPostForm(true)}\n            className='post-btn'>Edit post\n          </button>\n        }\n        {\n          props.loggedIn &&\n          <button onClick={() => deletePost(post.data._id)}\n            className='post-btn'>Delete post\n          </button>\n        }\n        {\n          props.loggedIn &&\n          <button onClick={() => changePublishStatus(post.data)}\n            className='post-btn'>\n            {\n              (!post.data.published &&\n                'Publish post') ||\n              'Unpublish post'\n            }\n          </button>\n        }\n        <button className='post-btn comment-display-btn' onClick={changeCommentDisplay}>{(showComments && 'Hide Comments') || 'Show Comments'}</button>\n      </div>\n      {\n        showComments &&\n        <div className='comments'>\n          {comments && comments.data.map((comment) => {\n            return (\n              <Comment\n                key={comment._id}\n                comment={comment}\n                loggedIn={props.loggedIn}\n                removeComment={removeComment}\n              />\n            )\n          })}\n          <CommentForm\n            comments={comments}\n            setComments={setComments}\n            post={post.data}\n          />\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default Post;\n\n// NEED TO ADD A PROMPT TO MAKE SURE USER WANTS TO DELETE POST","import './App.css';\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Login from './components/Login';\nimport Post from './components/Post';\nimport PostForm from './components/PostForm';\nconst URL = 'https://arctic-eh-68834.herokuapp.com';\n\nfunction App() {\n\n  const [posts, setPosts] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [displayLogin, setDisplayLogin] = useState(false);\n  const [displayPostForm, setDisplayPostForm] = useState(false);\n\n  const displayLoginModal = () => {\n    setDisplayLogin(!displayLogin);\n  };\n\n  const displayPostModal = () => {\n    setDisplayPostForm(!displayPostForm);\n  };\n\n  const logOut = () => {\n    localStorage.removeItem('userID');\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n  };\n\n  const addPost = (post) => {\n    post.author = post.author.username;\n    const temp = posts.data;\n    temp.push(post);\n    setPosts({ 'data': temp });\n  };\n\n  const removePost = (postID) => {\n    const temp = posts.data.filter(post => post._id !== postID);\n    setPosts({ 'data': temp });\n  };\n\n  useEffect(() => {\n    // Fetch all blog posts and set state\n    fetch(`${URL}/posts`).then((response) => {\n      response.json().then((posts) => {\n        setPosts({ 'data': posts });\n      });\n    });\n\n    // Check for userID in localStorage to determine logged in status\n    const userID = localStorage.getItem('userID');\n    if (userID) {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header\n        displayLoginModal={displayLoginModal}\n        displayPostModal={displayPostModal}\n        loggedIn={loggedIn}\n        logOut={logOut}\n      />\n      {\n        posts &&\n        // find a different method than map.. reduce?\n        posts.data.map((post) => {\n          if (post.published || loggedIn) {\n            return (\n              <Post key={post._id}\n                post={post}\n                loggedIn={loggedIn}\n                removePost={removePost}\n                setPosts={setPosts}\n                displayPostModal={displayPostModal}\n                displayPostForm={displayPostForm}\n              />\n            )\n          };\n        })\n      }\n      {\n        displayLogin &&\n        <Login\n          displayLoginModal={displayLoginModal}\n          loggedIn={loggedIn}\n          setLoggedIn={setLoggedIn}\n          setDisplayLogin={setDisplayLogin}\n        />\n      }\n      {\n        displayPostForm &&\n        <PostForm\n          displayPostModal={displayPostModal}\n          addPost={addPost}\n        />\n      }\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}